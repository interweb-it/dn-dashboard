scalar BigInt

type Query {
  telemetry(chainId: String!): [NodeDetailsX]
  # telemetryForNode(chainId: String!, stash: String, name: String): NodeDetailsX
  telemetryForIds(chainId: String!, ids: [Int]!): [NodeDetailsX]
  telemetryNames(chainId: String!): [String]
  telemetryByName(chainId: String!, name: String!): NodeDetailsX
  telemetryByIdentity(chainId: String!, identity: String!): NodeDetailsX
  telemetryByNetworkId(chainId: String!, networkId: String!): NodeDetailsX
  telemetryNameMap(chainId: String!): [nameMap]
}

type nameMap {
  dnIdentity: String
  telemetryName: String
}

type NodeDetailsX {
  NodeId: Int!
  NodeDetails: NodeDetails
  NodeStats: NodeStatsX
  NodeIO: [[Int]]
  NodeHardware: [[Float]]
  BlockDetails: BlockDetails
  NodeLocation: NodeLocationX
  IPGeo: IPGeo
  Timestamp: String
}

type NodeStatsX {
  PeerCount: Int
  TransactionCount: Int
}

type NodeLocationX {
  Latitude: Float
  Longitude: Float
  City: String
}

type IPGeo {
  ip: String
  query: String # IP address
  # countryCode: String
  # countryName: String
  country: String
  # regionCode: String
  # regionName: String
  city: String
  lat: Float
  lon: Float
}

type NodeDetails {
  NodeName: String
  TelemetryName: String
  NodeImplementation: String
  NodeVersion: String
  Field4: String
  # NetworkId: Maybe<String>,
  NetworkId: String,
  Address: String
  # OperatingSystem: String,
  # CpuArchitecture: CpuArchitecture,
  # _undefined: undefined
  # TargetEnv: TargetEnv
  NodeSysInfo: NodeSysInfo,
  ChainStats: ChainStats
}

type NodeSysInfo {
  cpu: String
  memory: BigInt
  core_count: Int
  linux_kernel: String
  linux_distro: String
  is_virtual_machine: Boolean
}

type ChainStats {
  cpu_hashrate_score: Int
  memory_memcpy_score: Int
  disk_sequential_write_score: Int
  disk_random_write_score: Int
}

# type NodeStats {}

# type NodeHardware {
#   # Array<BytesPerSecond>,  
#   # Array<BytesPerSecond>,
#   # Array<Timestamp>
# }

type BlockDetails {
  BlockNumber: BigInt
  BlockHash: String
  Milliseconds: Int
  Timestamp: BigInt
  PropagationTime: Int
}
